Em css todo final de marcacao tem ";"

Comentario eh /* comentario */

Selectors sao o que vao mirar os elementos que sao o h1 , h2 etc, os seletores sao no css quando vc poe h1 {} e o que vai dentro das curly braces sao as propriedades

Seletor:
h1 (elemento) {
color (propriedade): blue (valor);

Para criar um arquivo externo de css eh soh criar um arquivo com a extensao .css
Ao usar o comando link:css ele ja ira criar um codigo e na parte de href se vc segurar o ctrl e clicar e vc nao tiver 
o arquivo criado ele da uma msg de erro e a sugestao para vc criar o arquivo.
text-align - serve para ajustar o texto para normal, bold, bolder ou justify
text-indent - serve para que um texto tenha um espaco antes de comecar o texto, ou seja, uma margem de comeco, 50px eh um bom valor.
rgba(23,23,23,0.4) eh o rgb com um percentual de transparencia, o ultimo valor vai de 0 a 1 e representa 0 o maior nivel de transparencia e 1 o menor nivel.

Eh possivel utilizar o width e height em 100% para que independete do tamanho da tela que for ver a foto vai se adaptando.
box-shadow (deslocamento horizontal, deslocamento vertical, de espalhamento, cor)
padding eh um preenchimento invisivel dentro do bloco, ao usar so o padding ele preenche ao redor todo do texto (em cima, laterais e em baixo)
ex: padding: 14px 26px 5px 40px; (top, right, bottom, left)
margin eh o preenchimento do lado de fora da "caixa" (pra cima, pra baixo, e laterais)
position relative ele considera a posicao de onde ele foi criado e reserva aquele espaco, e ai vc pode movimentar ele a partir de onde ele foi criado para todos os lados
position static ele eh criado ali e dali nao sai.

		Pseudoselectors:

	h1:hover {}
	h1:first-child{}
	h1:last-child{}
	h1:nth-child(n){}
	h1:only-child{}
Voce deve selecionar o child e colocar o pseudoselector para que ele funcione, caso vc selecione o parent ele nao vai funcionar

		Pseudoselectors para links:
	h1:link
	h1:visited
Basicamente o primeiro eh caso vc ainda nao tenha clicado no link para acessar e o visited eh caso a pessoa ja tenha clicado no link e visitado a pagina

		Advanced selectors:

Para fazer uma configuracao de que todos os <a> seguidos de um <h2> por exemplo utilizar assim:
	h2 + a {}
Neste caso ele nao precisam estar dentro de um mesmo parent, soh serem seguidos

Para fazer uma configuracao como o de cima mas que estao dentro de um mesmo parent utilizar o seguinte:
	h2 ~ a {}
Dessa forma ele ira configurar somente os itens de forem seguidos e dentro do mesmo parent

Para configurar todos os childs dentro de um parent utilizar o seguinte:
	ul > li {} 
Neste caso ele ira fazer uma configuracao para todos os childs li que estao dentro do parent ul

No caso acima ele seleciona todos os childs diretos do ul, para selecionar todos os li dentro do parent utilizar sem o sinal >:
	ul li {}
Desta forma todos os li que estiverem dentro do ul (independente se ele for um child direto ou nao do ul) serao alterados.

		Attribute selectors:
Um atributo pode ser uma class ou um src dentro de um img ou qualquer outro atributo.
Com isso vc pode selecionar varios itens para configurar sem precisar criar um nome ou selecionar pelo selector.
O exemplo utilizado ele configura todas as imagens que estao na pasta de imagens e o comando fica o seguinte:
	img [src ^= "../img/] {}
Desta forma vc esta dizendo que o ^= significa que todo src que comecar com esse caminho tera a configuracao que vc colocar, caso nao tenha o ^ ele ira selecionar 
especificamente esse caminho que na verdade nao ira fazer nada. Entao para esse caso eh necessario o ^=.
Existem mais tipos que sao:
	^=  - significa comeca com o caminho informado
	$=  - significa termina com o caminho informado
	*=  - significa contem dentro do caminho ou "value" 	
		
		White space selector
Dentro de uma classe eh possivel dar varios nomes por exemplo <h2> class = "casas casa_do_cachorro" </h2>
Nessa situacao caso vc queira selecionar somente o casa do cachorro vc pode utilizar o seguinte seletor:
	h2 [class~=casa_do_cachorro] {}
O ~= serve para selecionar todo o value que estiver depois de um espaco em branco

		Dash selector
Caso vc tenha uma class que tenha assim por exemplo casa-cachorro e vc queira selecionar todos os itens que comecam com casa- utilizar assim:
	h2[class|=casa-cahorro]{}


		Background:
Podemos utilizar o comando background no css para colocar uma cor ou imagem no fundo da pagina
para colocar uma imagem utilizar:
	background: url("endereco online ou da sua pasta");
Para fazer com que a imagem nao se repita utilizar o comando:
background-repeat: no-repeat;
Para ajustar o tamanho da imagem de fundo:
	background-size: 50px (height) 100px (width);
	background-size: cover; Ira preencher o espaco inteiro, talvez possa comprometer a qualidade da imagem
	background-size: contain; Ele ira preencher o maximo que ter sem prejudicar as proporcoes, mas isso pode fazer com que a imagem nao pegue todo o espaco do container

		Cores Gradient
	Linear Gradient
Ãˆ uma transicao de cores (2 ou mais) que podem ser da esquerda pra direita, de cima pra baixo, dir pra esqu, baix pra cima ou ate em circulo
ex:
	background: linear-gradient(to right, red, green, blue); ou seja, voce esta falando que a cor vai comecar pelo vermelho na esquerda e vai pra direita transicionando ate o azul.
Tambem pode usar uma cor soh e fazer ela ir desaparecendo, ex:
	background: linear-gradient(to right, rgb(94, 255, 126) , rgba(94,255,126,0)); dessa forma vc utiliza uma cor 2 vezes mas na segunda vc adicionou uma transparencia que eh de 0 ou seja 100% transparente.

Para fazer ir transicionando diagonalmente utilizar assim:
	background: linear-gradient(to bottom right, rgb(94, 255, 126) , rgba(94,255,126,0));
Para fazer transicionar para um pedaco da tela que nao seja exatamente nos cantos ou cima, baixo e etx utilizar assim:
	background: linear-gradient(-90deg, rgb(94, 255, 126) , rgba(94,255,126,0)); 
o -90 eh referente a graus, assim como em uma regua de angulos, mas no css o angulo 0 eh como se fosse o 90 graus, ou seja, o meio em peh eh zero e a partir dai 
vc vai definindo quanto de angulo vc quer que ele transicione. O DEG eh degrees, ou seja, graus, nesse caso dissemos que queremos -90 graus a partir do 0 q eh no meio.

	Radial Gradient
O radial-gradient ele tem a forma de circulo ou oval, funciona muito semelhante ao linear
	background: radial-gradient(circle, red 20%, blue 40%, green 55%)


		Medidas utilizadas
px - sao pixels, sao versateis mas ao mesmo tempo sao fixas pq vc define um valor absoluto e ele ira manter esse tamanho.
% - percentual sao versateis e responsivos pois vao se ajustando ao tamanho da tela do usuario
em - ele pega o tamanho original e vc pode definir um percentual de quanto vc quer aumentar ou diminuir em relacao ao padrao, ex:
Um texto vem nesse tamanho padrao, caso eu queira aumentar 50% o tamanho dele posso usar 1.5em, e caso eu queira reduzir 50% do tamanho dele eu uso 0.5em
vh - view height pelo que entendi eh relacionado a um percentual do campo de visao que vc tem da tela em altura
vw - view width eh relacionado a um percentual do campo de visao que vc tem da tela em largura



		Text Manipulation

A manipulacao de texto eh independente da fonte, ou seja, se a fonte for arial, times new roman ou estiver em negrito, vc pode alinhar, colocar linhas, deixar em caixa alta com a manipulacao de texto, 
mas vc nao consegue fazer esses tipos de coisa na manipulacao de fonte.

text-decoration pode ter 4 tipos:
	underline - linha em baixo do texto, "sublinhado"
	none - Nao tem nenhum tipo de linha no texto
	line-through - ele corta o texto ao meio, meio q pra indicar que algo nao existe mais, ou que nao pode ser usado, mas ainda eh possivel ler o texto
	overline - linha em cima do texto, talvez para colocar assinatura 

text-transform pode ter 3 tipos:
	uppercase - Deixa todas as palavras maiusculas
	lowercase - Deixa todas as palavras minusculas
	capitalize - Esse fara com que todas as palavras do seletor selecionado fiquem com a primeira letra em maiusculo

text-align tem basicamente 4 principais:
	left - deixa tudo alinhado pra esquerda
	right - deixa alinhado pra direita
	center - deixa alinhado ao centro
	justify - faz com que todo o texto tenha a mesma espessura, dessa forma faz o texto esticar por igual as palavras e ficar mais alinhado

		Font Manipulation

Com  manipulacao de fonte eh possivel ajustar o tamanho da fonte, negrito, italico, cor entre outros.
Para ajuste de tamanho foi recomendado o em pois dessa forma vc aumenta o tamnho proporcional e nao um valor fixo como o px

font-size ajusta o tamnho da letra, pode ser em px, em, % como quiser.

font-weight eh o nivel de negrito que vc vai querer na fonte, pode ir de 0 a 900 (pode ser maior dependendo da fonte, geralmente vai ate 800 ou 900) aumentar de 100 em 100 que eh o padrao, o padrao vem em 400 geralmente

font-style eh o nivel de italico que vc vai querer, existem 3 tipos:
	normal - que eh o padrao sem nada
	italic - que eh o italico 
	olique - que eh o italico um pouco mais forte (pequena diferenca, mas existe)

font-family existem 3 familias de fonte principais, serife, sans serif, e mono space
	Serif sao as letras que nas pontas tem umas linhas que continuam, nao eh essa que eh utilizada aqui, mais facil ver com a letra M pq nas extremidades do M tem linhas que continuam nessa fonte. ex. Times new roman
	sans serife sao as letras tipo essa daqui, nao tem essas linhas extras nas extremidades das letras. ex. arial, calibry
	mono space basicamente as letras tem a mesma especurra, quase como um justify de fabrica. ex: cousine

font-family: "Times New Roman", serif;
O comando ficara da seguinte forma, caso va utilizar uma fonte especifica e ela tem espaco dentro do nome tipo Times new roman, entao ela deve estar dentro de aspas.O serif depois da fonte serve para 
caso a fonte especificada nao esteja disponivel utilizar a familia definida, no caso a serif.

		Utilizando fontes externas

Apos selecionar a font que desseja no site do google fonts copiar o endereco do html e colar EM CIMA NO LINK DO CSS, importante pois quando a pagina carregar a fonte ja tem q estar disponivel.
Depois no css vc pode especificar a fonte-family que vc baixou junto com o(s) backup(s) como no exemplo de cima.


		Border
	border: size style color;

Dentro de style temos 4 tipos principais:
	solid - eh uma linha normal e constante
	dotted - sao varias bolinhas/pontinhos 
	dashed - sao varios tracos com pequenos espacos entre eles
	doubled - sao 2 linhas solidas uma mais por fora e outra por dentro com uma pequena distancia entre elas, eh tipo uma borda dentro de uma borda

		Float and Dislpay

	dislpay:none; ele some com o item da tela completamente como se ele nao existisse, eh utilizado junto com JS caso queira deixar algo oculto e mostrar soh dps, ou coisa assim. 
	

		FLEXBOX
Para acionar o flexbox utilizar o comando:
	dislplay:flex;
O comando para definir se seus child containers vai ficar em linha ou em coluna eh o:
	flex-direction: row ou column; padrao ele vir como row

O comando para fazer com que ao encurtar a pagina o item va para proxima linha eh o:
	flex-wrap: nowrap ou wrap; de padrao ele ja vem como nowrap

Para alinhar os child containers utilizar o comando:
	justify-content: ele ira alinhar os itens horizontalmente
		flex-start - ele faz com que todos os child containers comecem da esquerda para direira dentro do container parent
		flex-end - ele faz com que todos os child containers comecem da direita para esquerda dentro do container parent, mas sem alterar a ordem que foram criados (A, B, C, D, etc...)
		center - ele faz com que todos os child containers fiquem centralizados dentro do container parent
		space-between - ele distribui os child containers para que fiquem com a mesma distancia entre eles e ocupem o totalmente o container, mas o primeiro e o ultimo encostam na borda do container
		space-around - ele vai criar um espaco em volta de todos os child containers para que fiquem igualmente distribuidos entre o container, entao o primeiro e ultimo tb tem espaco em relacao a borda do container
		space-evenly - ele ira fazer com que todos os espacos em volta dos child containers fiquem exatamente iguais, pq no space around no primeiro child na esquerda e no ultimo child na direita eles ficam com 1 espaco, enquanto entre os outros childs ele fica dobrado pq soma o espaco de um com o espaco de outro.
	align-items: ele ira alinhas os items verticalmente
		center - ele ira centralizar verticalmente os child containers em relacao ao topo e baixo do container parent (ele pode reajustar o tamanho do child container tb)
		flex-start - ele vai fazer com que o child comece no topo do container 
		flex-end - ele vai fazer com que o child comece no rodape do container
		baseline - ele vai fazer com que independente do tamanho diferente dos child containers, ele faz com que eles fiquem sempre alinhados (pelo menos com o texo interno)
		stretch - ele vai esticar os child containers para preencher de cima a baixo do container

		Item Order
Eh possivel utilizar o comando order para caso vc tenha varios containers vc pode coloca-los numa ordem diferente da que foram criados [pode ser utilizado para que a ordem seja alterada caso o usuario faca alguma acao atraves de JS, acho]	
	order: o padrao eh 0, mas pra vc classificar a ordem vai de 1 ate o numero que vc quiser/tiver
		
		Grow, Shrink & Basis
	flex-basis: Aqui vc pode definir um valor em px,% ou outros pra definir o tamanho minimo que seus containers terao
	flex-grow: o padrao eh 0, ao definir um valor no grow vc estara preenchendo o espaco em branco do container principal fazendo com que os childs aumentem horizontalmente.Se um child tiver com valor maior que os demais este tera mais espaco que os outros.
	flex-shrink: o padrao do shrink eh 1, se vc definir como 0 significa que vc nao quer que aquele container encolha nada, ao definir todos os child container com o mesmo numero todos vao encolher de forma proporcional, ao definir algum container com um valor maior vc esta dizendo para ele encolher mais rapido que os demais. Esse comando basicamente define se todos vao encolher ou nao, e qual a proporcao entre eles. (horizontalmente tb)

Para fazer os comandos acima de forma resumida utilizar o comando flex
	flex: grow shrink basis
	flex: 0 1 100px
		
		Item Alignment
O comando de baseline e stretch nao funcionam nesse comando.
	align-self: vc pode usar o flex-start/flex-end ou center para fazer com que o child container se alinhe no topo, meio ou baixo do container parent, esse comando vai fazer soh o proprio child se mover e nao todos como no align items visto acima.



		GRID

Para ativar o grid utilizar:
	display: grid;

Apos isso vc deve especificar a quantidade de linhas e/ou colunas que vc vai querer no seu grid utilizado:
	grid-template-rows - para definir linhas ( um valor bom eh 1fr que significa 1 fracao, ou entao auto) auto auto auto (significa que teremos 3 linhas de tamanhos iguais), ou como as linhas nao vao variar muito de aparelho pra aparelho vc pode definir numeros absolutos tb, como pixels
	grid-template-columns: para definir colunas igual ao de cima soh que sera para colunas, podemos utilizar as mesmas unidades de medida tb.


video 4:21


